// <auto-generated />
using System;
using Assignment1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment1.Migrations
{
    [DbContext(typeof(IncidentContext))]
    [Migration("20210221235510_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment1.Models.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("customerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            customerId = 1,
                            customerAddress = "San Francisco",
                            customerEmail = "Kanthoni@pge.com",
                            customerFullName = "Kaitlyn Anthoni"
                        },
                        new
                        {
                            customerId = 2,
                            customerAddress = "Washington",
                            customerEmail = "ania@mma.nidc.com",
                            customerFullName = "Ana Irvin"
                        },
                        new
                        {
                            customerId = 3,
                            customerAddress = "Mission Viejo",
                            customerEmail = "  ",
                            customerFullName = "Gonzalo Keeton"
                        },
                        new
                        {
                            customerId = 4,
                            customerAddress = "Sacramento",
                            customerEmail = "amauro@yahoo.org",
                            customerFullName = "Anton Mauro"
                        },
                        new
                        {
                            customerId = 5,
                            customerAddress = "Fresno",
                            customerEmail = "kmayte@fresco.ca.gov",
                            customerFullName = "Kendall Mayte"
                        },
                        new
                        {
                            customerId = 6,
                            customerAddress = "Los Angeles",
                            customerEmail = "kenzie@mma.jobtrak.com",
                            customerFullName = "Kenzie Quinn"
                        },
                        new
                        {
                            customerId = 7,
                            customerAddress = "Fresno",
                            customerEmail = "marvin@expedata.com",
                            customerFullName = "Marvin Quintin"
                        });
                });

            modelBuilder.Entity("Assignment1.Models.Incident", b =>
                {
                    b.Property<int>("incidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("incidentCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incidentProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incidentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("incidentId");

                    b.ToTable("Incident");

                    b.HasData(
                        new
                        {
                            incidentId = 1,
                            dateOpened = new DateTime(2020, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            incidentCustomer = "Kendall Mayte",
                            incidentProduct = "Draft Manager 1.0",
                            incidentTitle = "Could not install"
                        },
                        new
                        {
                            incidentId = 2,
                            dateOpened = new DateTime(2020, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            incidentCustomer = "Gonzoalo Keeton",
                            incidentProduct = "Tournament Master 1.0",
                            incidentTitle = "Could not install"
                        },
                        new
                        {
                            incidentId = 3,
                            dateOpened = new DateTime(2020, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            incidentCustomer = "Ania Irvin",
                            incidentProduct = "League Scheduler Deluxe 1.0",
                            incidentTitle = "Error importing data"
                        },
                        new
                        {
                            incidentId = 4,
                            dateOpened = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            incidentCustomer = "Ania Irvin",
                            incidentProduct = "League Scheduler 1.0",
                            incidentTitle = "Error launching data"
                        });
                });

            modelBuilder.Entity("Assignment1.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("productCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("productPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("releaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("productId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            productId = 1,
                            productCode = "TRNY10",
                            productName = "Tournament Master 1.0",
                            productPrice = 4.9900000000000002,
                            releaseDate = new DateTime(2015, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            productId = 2,
                            productCode = "LEAG10",
                            productName = "League Scheduler 1.0",
                            productPrice = 4.9900000000000002,
                            releaseDate = new DateTime(2016, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            productId = 3,
                            productCode = "LEAGD10",
                            productName = "League Scheduler Deluxe 1.0",
                            productPrice = 7.9900000000000002,
                            releaseDate = new DateTime(2016, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            productId = 4,
                            productCode = "DRAFT10",
                            productName = "Draft Maanger 1.0",
                            productPrice = 4.9900000000000002,
                            releaseDate = new DateTime(2017, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            productId = 5,
                            productCode = "TEAM10",
                            productName = "Team Manager 1.0",
                            productPrice = 4.9900000000000002,
                            releaseDate = new DateTime(2017, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            productId = 6,
                            productCode = "TRNY20",
                            productName = "Tournament Master 2.0",
                            productPrice = 5.9900000000000002,
                            releaseDate = new DateTime(2015, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            productId = 7,
                            productCode = "DRAFT20",
                            productName = "Draft Manager 2.0",
                            productPrice = 5.9900000000000002,
                            releaseDate = new DateTime(2015, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Assignment1.Models.Technician", b =>
                {
                    b.Property<int>("technicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("technicianEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("technicianFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("technicianPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("technicianId");

                    b.ToTable("Technician");

                    b.HasData(
                        new
                        {
                            technicianId = 1,
                            technicianEmail = "alison@sportsprosoftware.com",
                            technicianFullName = "Alison Diaz",
                            technicianPhone = "800-555-0443"
                        },
                        new
                        {
                            technicianId = 2,
                            technicianEmail = "awilson@sportsprosoftware.com",
                            technicianFullName = "Andrew Wilson",
                            technicianPhone = "800-555-0449"
                        },
                        new
                        {
                            technicianId = 3,
                            technicianEmail = "gfiori@sportsprosoftware.com",
                            technicianFullName = "Gina Fiori",
                            technicianPhone = "800-555-0459"
                        },
                        new
                        {
                            technicianId = 4,
                            technicianEmail = "gunter@sportsprosoftware.com",
                            technicianFullName = "Gunter Wendt",
                            technicianPhone = "800-555-0400"
                        },
                        new
                        {
                            technicianId = 5,
                            technicianEmail = "jason@sportsprosoftware.com",
                            technicianFullName = "Jason Lee",
                            technicianPhone = "800-555-0444"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
